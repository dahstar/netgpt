{% extends 'base.html' %}

{% block content %}
    <div class="container">
        <div class="total-score">
            Total Score of All Posts: {{ total_score }}
        </div>
        <style>
            #test1 {
                width: 600px; /* Set a fixed width here */
                max-height: auto; /* Adjust the maximum height as needed */
                resize: vertical; /* Allow vertical resizing */
                overflow-y: auto; /* Add vertical scroll when content exceeds max-height */
            }
        </style>
        {% if user.is_authenticated %}
            <p>Hello, {{ user.username }}!</p>
            <a href="{% url 'logout' %}">Logout</a>
        {% else %}
            <p>
                You are not logged in.
                <a href="{% url 'login' %}">Login</a> or
                <a href="{% url 'register' %}">Register</a>
            </p>
        {% endif %}

        <form method="post">
            {% csrf_token %}
            <div class="form-group">
                {{ form.content.label_tag }}
                <textarea id="test1" name="content" oninput="adjustTextarea(this)" class="styled-input form-control">{{ form.content.value }}</textarea>
            </div>
            <button type="submit" class="btn-post">Post</button>
            <button type="button" id="generate-post" class="styled-input form-control">Generate AI</button>
        </form>

      <script>
    document.addEventListener("DOMContentLoaded", function () {
        // Get references to the button and form field
        const generateAiButton = document.getElementById("generate-post");
        const replyContentField = document.getElementById("test1"); // Replace with the actual ID
        const postId = "{{ post.id }}"; // Get the post's ID from the template

        // Add a click event listener to the button
        generateAiButton.addEventListener("click", function () {
            // Get the post content from the input field
            const postContent = replyContentField.value;

            // Make an AJAX request to the Django view with the post_id and post_content query parameters
            fetch("{% url 'generate_ai_content' %}?post_id=" + postId + "&post_content=" + encodeURIComponent(postContent))
                .then(response => response.text())
                .then(data => {
                    // Update the form field's value with the AI-generated content
                    replyContentField.value = data;

                    // Adjust the height of the text area based on the content length
                    replyContentField.style.height = replyContentField.scrollHeight + "px";
                })
                .catch(error => {
                    console.error("Error:", error);
                });
        });

        // Add a keydown event listener to the textarea
        replyContentField.addEventListener("keydown", function (event) {
            if (event.key === "Enter") {
                event.preventDefault(); // Prevent the default Enter key behavior
                replyContentField.style.height = replyContentField.scrollHeight + "px"; // Adjust the height on Enter
                replyContentField.value += "\n";
            } else if (event.key === "Backspace" && replyContentField.selectionStart === 0 && replyContentField.selectionEnd === 0) {
                // Check if the cursor is at the beginning of the textarea (first character)
                // Decrease the height of the textarea by the line height (you may need to adjust this value)
                replyContentField.style.height = (replyContentField.scrollHeight - parseInt(getComputedStyle(replyContentField).lineHeight)) + "px";
            }
        });
    });
</script>


        <ul class="post-list">
            {% for post in posts %}
                <li class="post-item">
                   <p><a href="{% url 'profile' post.user.username %}">{{ post.user.username }} </a>: {{ post.content }} - {{ post.created_at }}</p>
 {{ post.content }} - {{ post.created_at }}
                    <br>
                    Likes: {{ post.likes.count }}
                    Dislikes: {{ post.dislikes.count }}
                    RePosts: {{ post.reposts.count }}
                    Score: {{ post.total_score }}
                    <br>
                    <a href="{% url 'like_post' post.pk %}">+1</a>
                    <a href="{% url 'dislike_post' post.pk %}">-1</a>
                    <a href="{% url 'repost_post' post.pk %}">*2</a>
                    <a href="{% url 'delete_post' post.pk %}">*0</a>
                    <a href="{% url 'reply_list_view' post.pk %}">++</a>
                </li>
                {% if not forloop.last %}
                    <hr class="post-divider">
                {% endif %}
            {% endfor %}
        </ul>
    </div>
{% endblock %}
